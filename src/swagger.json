{
  "openapi": "3.0.3",
  "x-stoplight": {
    "id": "fsr4j531nu6qh"
  },
  "info": {
    "title": "Blog Post Api",
    "version": "1.0",
    "description": "This is a fully functioned blog post api, with user authentiacation, multiple file uploads , file streaming , comments and more...",
    "contact": {
      "name": "Aritra sadhukhan",
      "email": "aritra.sadhukhan@codeclouds.in",
      "url": "http://swagger.io/terms/"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://swagger.io/"
    },
    "termsOfService": "http://swagger.io/terms/"
  },
  "servers": [
    {
      "url": "http://localhost:1020/api/v1"
    }
  ],
  "paths": {
    "/user/{userId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "the user's  _id"
        }
      ],
      "get": {
        "summary": "Get specific user",
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "image": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "_id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "user": {
                        "image": {
                          "url": "http://localhost:1020/user/62d7f3e990a2466714e7deb7/avatar"
                        },
                        "_id": "62d7f3e990a2466714e7deb7",
                        "username": "aritra test",
                        "email": "aritrasadhukhan@gmail.com",
                        "password": "$2b$10$4DIXdZrvFGIz8mlZ1NdxqOjdrRby4a.NxhVN7fTFijXOmSAL09.He",
                        "__v": 0
                      }
                    }
                  }
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "user": {
                        "image": {
                          "url": "http://localhost:1020/user/62d7f3e990a2466714e7deb7/avatar"
                        },
                        "_id": "62d7f3e990a2466714e7deb7",
                        "username": "aritra test",
                        "email": "aritrasadhukhan@gmail.com",
                        "password": "$2b$10$4DIXdZrvFGIz8mlZ1NdxqOjdrRby4a.NxhVN7fTFijXOmSAL09.He",
                        "__v": 0
                      }
                    }
                  },
                  "invalid id": {
                    "value": {
                      "success": false,
                      "message": "Cast Error : Invalid Id format"
                    }
                  },
                  "not found": {
                    "value": {
                      "success": false,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "User not found"
                    }
                  }
                },
                "examples": {
                  "not found": {
                    "value": {
                      "success": false,
                      "message": "User not found"
                    }
                  },
                  "invalid id format": {
                    "value": {
                      "success": false,
                      "message": "Cast Error : Invalid Id format"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-user-userId",
        "description": "This endpoint provides the details of a specific user.",
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/user/all": {
      "get": {
        "summary": "Get all user with pagination",
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "Results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "__v": {
                                "type": "integer"
                              },
                              "image": {
                                "type": "object",
                                "properties": {
                                  "data": {
                                    "type": "null"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "totalResult": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62d64e7fca666d9ee74a10c5",
                            "username": "demo3",
                            "email": "demo3@gmail.com",
                            "password": "$2b$10$YyvZsroX/yAFJDznax4U1.Zkn29520YvWniHYJyVn.RgcZUhiLrH.",
                            "__v": 0,
                            "image": {
                              "data": null
                            }
                          },
                          {
                            "_id": "62d683d17bc23f17bccb3162",
                            "username": "aritra op",
                            "email": "aritrasadhukhan430@gmail.com",
                            "password": "$2b$10$mMmnANRD9roaAtbq4lCtXuO0.DErY8eNLkNOPdFHrPilvtWmKY3Uq",
                            "__v": 0,
                            "image": {
                              "data": null
                            }
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 4
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "sample response": {
                    "value": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62d7f3e990a2466714e7deb7",
                            "username": "test",
                            "email": "test@gmail.com",
                            "password": "$2b$10$4DIXdZrvFGIz8mlZ1NdxqOjdrRby4a.NxhVN7fTFijXOmSAL09.He",
                            "__v": 0,
                            "image": {
                              "data": null,
                              "url": "http://localhost:1020/user/62d7f3e990a2466714e7deb7/avatar"
                            }
                          },
                          {
                            "_id": "62de16e69fef19b539425830",
                            "username": "random user",
                            "email": "randomuser@gmail.com",
                            "password": "$2b$10$wUAbtJXL.4TW/qFaL3M4O.hOkXxqKniuEZV29AortmijTD3qYEK9W",
                            "__v": 0,
                            "image": {
                              "data": null,
                              "url": "http://localhost:1020/user/62de16e69fef19b539425830/avatar"
                            }
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 4
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-user-all",
        "description": "This endpoint provides the user list with pagination.",
        "security": [
          {
            "apikey": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "number of results to be fetched/no of results per page, defaults to be 5"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "page no you want, defaults to be 1"
          }
        ]
      }
    },
    "/user": {
      "post": {
        "summary": "Create New User",
        "operationId": "post-user",
        "responses": {
          "201": {
            "description": "User created successfully.Please login to continue.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "_id": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "user": {
                        "username": "random user",
                        "email": "randomuser@gmail.com",
                        "password": "$2b$10$NFqRsvCAdcl8iQayEffdNOJ5fxcSIuy4llzflhr.PozRg5Nx2.43C",
                        "_id": "62de16e69fef19b539425830",
                        "__v": 0
                      },
                      "message": "User created successfully.Please login to continue."
                    }
                  }
                },
                "examples": {
                  "New User Random Fellow": {
                    "value": {
                      "success": true,
                      "user": {
                        "username": "random user",
                        "email": "randomuser@gmail.com",
                        "password": "$2b$10$NFqRsvCAdcl8iQayEffdNOJ5fxcSIuy4llzflhr.PozRg5Nx2.43C",
                        "_id": "62de16e69fef19b539425830",
                        "__v": 0
                      },
                      "message": "User created successfully.Please login to continue."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing Required Information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Validation failure": {
                    "value": {
                      "success": false,
                      "message": "username cannot be empty"
                    }
                  },
                  "email already exists": {
                    "value": {
                      "success": false,
                      "message": "User with this email already exists,please try with a different account or login."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email Already Taken"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 3
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 5
                  }
                },
                "required": ["username", "email", "password"]
              },
              "examples": {
                "Create User Random Fellow": {
                  "value": {
                    "username": "random user",
                    "email": "randomuser@gmail.com",
                    "password": "strongpassword"
                  }
                },
                "Validation failure": {
                  "value": {
                    "email": "randomuser@gmail.com",
                    "password": "strongpassword"
                  }
                },
                "email already exists": {
                  "value": {
                    "username": "rando",
                    "email": "randomuser@gmail.com",
                    "password": "strongpassword"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 3
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 5
                  }
                },
                "required": ["username", "email", "password"]
              },
              "examples": {
                "example-1": {
                  "value": "{\n    \"username\" : \"user test\",\n    \"email\" : \"testemail@gmail.com\",\n    \"password\" : \"password\"\n}"
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "text/html": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "Post the necessary fields for the API to create a new user."
        },
        "description": "Sign up a new user.",
        "parameters": [],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": ["user"]
      },
      "delete": {
        "summary": "Delete user",
        "operationId": "delete-user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "user": {
                        "_id": "62de16e69fef19b539425830",
                        "username": "random user",
                        "email": "randomuser@gmail.com",
                        "password": "$2b$10$wUAbtJXL.4TW/qFaL3M4O.hOkXxqKniuEZV29AortmijTD3qYEK9W",
                        "__v": 0
                      },
                      "message": "We will miss you, random user"
                    }
                  }
                },
                "examples": {
                  "delete success": {
                    "value": {
                      "success": true,
                      "user": {
                        "_id": "62de16e69fef19b539425830",
                        "username": "random user",
                        "email": "randomuser@gmail.com",
                        "password": "$2b$10$wUAbtJXL.4TW/qFaL3M4O.hOkXxqKniuEZV29AortmijTD3qYEK9W",
                        "__v": 0
                      },
                      "message": "We will miss you, random user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Invalid credentials"
                    }
                  }
                },
                "examples": {
                  "not found": {
                    "value": {
                      "success": false,
                      "message": "Invalid credentials"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete user permanently",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "parameters": [],
        "tags": ["user"]
      }
    },
    "/user/login": {
      "post": {
        "summary": "User Login",
        "operationId": "post-user-login",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "user": {
                        "_id": "62de16e69fef19b539425830",
                        "username": "random user",
                        "email": "randomuser@gmail.com",
                        "password": "$2b$10$NFqRsvCAdcl8iQayEffdNOJ5fxcSIuy4llzflhr.PozRg5Nx2.43C",
                        "__v": 0
                      },
                      "message": "Welcome, random user"
                    }
                  }
                },
                "examples": {
                  "Login success": {
                    "value": {
                      "success": true,
                      "user": {
                        "_id": "62de16e69fef19b539425830",
                        "username": "random user",
                        "email": "randomuser@gmail.com",
                        "password": "$2b$10$NFqRsvCAdcl8iQayEffdNOJ5fxcSIuy4llzflhr.PozRg5Nx2.43C",
                        "__v": 0
                      },
                      "message": "Welcome, random user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Invalid credentials": {
                    "value": {
                      "success": false,
                      "message": "Invalid credentials"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This validates user token and grant access to certain post and comments related operations. store the token from the response it will be the Bearer token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "email": "randomuser@gmail.com",
                    "password": "strongpassword"
                  }
                },
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              },
              "examples": {
                "Login success": {
                  "value": {
                    "email": "randomuser@gmail.com",
                    "password": "strongpassword"
                  }
                },
                "Invalid credentials": {
                  "value": {
                    "email": "randomuser@gmail.com",
                    "password": "strongpass"
                  }
                }
              }
            }
          },
          "description": "You have to request with the user email and password."
        },
        "parameters": [],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": ["user"]
      }
    },
    "/user/logout": {
      "post": {
        "summary": "User Logout",
        "operationId": "post-user-logout",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Logout Success": {
                    "value": {
                      "success": true,
                      "message": "See you soon..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "Invalid token": {
                    "value": {
                      "success": false,
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint black lists the user's authorization token",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "tags": ["user"],
        "parameters": []
      }
    },
    "/user/avatar": {
      "put": {
        "summary": "Set profile pic",
        "operationId": "put-user-avatar",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "url": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "url": "http://localhost:1020/user/62de16e69fef19b539425830/avatar",
                      "message": "Profile picture has been set"
                    }
                  }
                },
                "examples": {
                  "valid photo upload": {
                    "value": {
                      "success": true,
                      "url": "http://localhost:1020/user/62de16e69fef19b539425830/avatar",
                      "message": "Profile picture has been set"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "invalid file type": {
                    "value": {
                      "success": false,
                      "message": "This format is not supported"
                    }
                  },
                  "file too large": {
                    "value": {
                      "success": false,
                      "message": "File too large"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint sets user's profile pic.",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["avatar"]
              },
              "examples": {
                "valid photo upload": {
                  "value": {
                    "avatar": "somepic.jpg"
                  }
                }
              }
            },
            "application/javascript": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "send the picture user want to set as profile pic..file size must be below 1mb. Accepted file types are : png,jpg,jpeg,JPEG"
        },
        "tags": ["user"]
      },
      "delete": {
        "summary": "Remove user profile pic",
        "operationId": "delete-user-avatar",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "message": "Profile picture has been removed"
                    }
                  }
                },
                "examples": {
                  "remove pic success": {
                    "value": {
                      "success": true,
                      "message": "Profile picture has been removed"
                    }
                  },
                  "invalid token": {
                    "value": {
                      "success": false,
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint removes user profile pic..",
        "tags": ["user"],
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/{userId}/avatar": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Show users profile pic.",
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "user not found": {
                    "value": {
                      "success": false,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-user-userId-avatar",
        "description": "Hit this endpoint to show user's profile pic."
      }
    },
    "/user/forgetpassword": {
      "post": {
        "summary": "Forget password",
        "operationId": "post-user-forgetpassword",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "resetToken": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "resetToken": "0743fe838a1d542d44d91b66f801a9b573a17603",
                      "message": "Mail has been sent to your account,If not found please check your spam folder"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "resetToken": "0743fe838a1d542d44d91b66f801a9b573a17603",
                      "message": "Mail has been sent to your account,If not found please check your spam folder"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "User not found"
                    }
                  }
                },
                "examples": {
                  "not found": {
                    "value": {
                      "success": false,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "this endpoint generate reset password link and mails it to user...",
        "security": [
          {
            "apikey": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "email": "randomuser@gmail.com"
                  }
                },
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              },
              "examples": {
                "example": {
                  "value": {
                    "email": "randomuser@gmail.com"
                  }
                }
              }
            }
          },
          "description": "the email must be porvided"
        },
        "tags": ["user"]
      }
    },
    "/user/resetpassword/{resettoken}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "resettoken",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Reset User password",
        "operationId": "put-user-resetpassword-resettoken",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "user": {
                        "_id": "62de16e69fef19b539425830",
                        "username": "random user",
                        "email": "randomuser@gmail.com",
                        "password": "$2b$10$hmnB64Is2hzUTHnRc7ASKOP7CoBTqli2mSB77URRPqgVFvOeprGp.",
                        "__v": 0
                      },
                      "message": "Password has been reset,please login to continue"
                    }
                  }
                },
                "examples": {
                  "password reset success": {
                    "value": {
                      "success": true,
                      "user": {
                        "_id": "62de16e69fef19b539425830",
                        "username": "random user",
                        "email": "randomuser@gmail.com",
                        "password": "$2b$10$hmnB64Is2hzUTHnRc7ASKOP7CoBTqli2mSB77URRPqgVFvOeprGp.",
                        "__v": 0
                      },
                      "message": "Password has been reset,please login to continue"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Password and confirm password must be same"
                    }
                  }
                },
                "examples": {
                  "password not match": {
                    "value": {
                      "success": false,
                      "message": "Password and confirm password must be same"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Invalid reset token or token has been expired, please try again"
                    }
                  }
                },
                "examples": {
                  "invalid reset token": {
                    "value": {
                      "success": false,
                      "message": "Invalid reset token or token has been expired, please try again"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This endpoints sets new user password. The reset password mail forwarded to the user contains the url of this path. So make a page with the same path that user can come to this page and request for password reset.",
        "security": [
          {
            "apikey": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "password": "pass",
                    "confirmPassword": "passdfgdf"
                  }
                },
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string"
                  }
                },
                "required": ["password", "confirmPassword"]
              },
              "examples": {
                "reset request": {
                  "value": {
                    "password": "password",
                    "confirmPassword": "password"
                  }
                },
                "invalid reset - validation error-password length short": {
                  "value": {
                    "password": "pass",
                    "confirmPassword": "pass"
                  }
                },
                "ivnvalid request- mismatch password": {
                  "value": {
                    "password": "pass",
                    "confirmPassword": "passdfgdf"
                  }
                }
              }
            }
          },
          "description": "user must request with new password and confirm password"
        },
        "tags": ["user"]
      }
    },
    "/post": {
      "get": {
        "summary": "Get all posts with customization",
        "tags": ["post"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "Results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "author": {
                                "type": "string"
                              },
                              "authorname": {
                                "type": "string"
                              },
                              "media": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "mediaRef": {
                                      "type": "string"
                                    },
                                    "mediaUrl": {
                                      "type": "string"
                                    },
                                    "_id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "likes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {}
                                }
                              },
                              "likecount": {
                                "type": "integer"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "__v": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "totalResult": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62de538840327b2c63fb16ed",
                            "title": "The brown fox story",
                            "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                            "author": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "media": [
                              {
                                "mediaRef": "62de538140327b2c63fb164f",
                                "mediaUrl": "http://localhost:1020/post/62de538140327b2c63fb164f/media",
                                "_id": "62de538840327b2c63fb16ee"
                              },
                              {
                                "mediaRef": "62de538740327b2c63fb16e9",
                                "mediaUrl": "http://localhost:1020/post/62de538740327b2c63fb16e9/media",
                                "_id": "62de538840327b2c63fb16ef"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["greed", ""],
                            "createdAt": "2022-07-25T08:25:44.624Z",
                            "updatedAt": "2022-07-25T08:25:44.624Z",
                            "__v": 0
                          },
                          {
                            "_id": "62de530340327b2c63fb164a",
                            "title": "The brown fox story",
                            "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                            "author": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "media": [
                              {
                                "mediaRef": "62de52fb40327b2c63fb15ac",
                                "mediaUrl": "http://localhost:1020/post/62de52fb40327b2c63fb15ac/media",
                                "_id": "62de530340327b2c63fb164b"
                              },
                              {
                                "mediaRef": "62de530240327b2c63fb1646",
                                "mediaUrl": "http://localhost:1020/post/62de530240327b2c63fb1646/media",
                                "_id": "62de530340327b2c63fb164c"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["greed", "cunning"],
                            "createdAt": "2022-07-25T08:23:31.507Z",
                            "updatedAt": "2022-07-25T08:23:31.507Z",
                            "__v": 0
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 2
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "?keyword=fox&lt=3&page=1": {
                    "value": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62de538840327b2c63fb16ed",
                            "title": "The brown fox story",
                            "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                            "author": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "media": [
                              {
                                "mediaRef": "62de538140327b2c63fb164f",
                                "mediaUrl": "http://localhost:1020/post/62de538140327b2c63fb164f/media",
                                "_id": "62de538840327b2c63fb16ee"
                              },
                              {
                                "mediaRef": "62de538740327b2c63fb16e9",
                                "mediaUrl": "http://localhost:1020/post/62de538740327b2c63fb16e9/media",
                                "_id": "62de538840327b2c63fb16ef"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["greed", ""],
                            "createdAt": "2022-07-25T08:25:44.624Z",
                            "updatedAt": "2022-07-25T08:25:44.624Z",
                            "__v": 0
                          },
                          {
                            "_id": "62de530340327b2c63fb164a",
                            "title": "The brown fox story",
                            "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                            "author": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "media": [
                              {
                                "mediaRef": "62de52fb40327b2c63fb15ac",
                                "mediaUrl": "http://localhost:1020/post/62de52fb40327b2c63fb15ac/media",
                                "_id": "62de530340327b2c63fb164b"
                              },
                              {
                                "mediaRef": "62de530240327b2c63fb1646",
                                "mediaUrl": "http://localhost:1020/post/62de530240327b2c63fb1646/media",
                                "_id": "62de530340327b2c63fb164c"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["greed", "cunning"],
                            "createdAt": "2022-07-25T08:23:31.507Z",
                            "updatedAt": "2022-07-25T08:23:31.507Z",
                            "__v": 0
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 2
                          }
                        ]
                      }
                    }
                  },
                  "?srt=mr&lt=1&page=2": {
                    "value": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62de530340327b2c63fb164a",
                            "title": "The brown fox story",
                            "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                            "author": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "media": [
                              {
                                "mediaRef": "62de52fb40327b2c63fb15ac",
                                "mediaUrl": "http://localhost:1020/post/62de52fb40327b2c63fb15ac/media",
                                "_id": "62de530340327b2c63fb164b"
                              },
                              {
                                "mediaRef": "62de530240327b2c63fb1646",
                                "mediaUrl": "http://localhost:1020/post/62de530240327b2c63fb1646/media",
                                "_id": "62de530340327b2c63fb164c"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["greed", "cunning"],
                            "createdAt": "2022-07-25T08:23:31.507Z",
                            "updatedAt": "2022-07-25T08:23:31.507Z",
                            "__v": 0
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 9
                          }
                        ]
                      }
                    }
                  },
                  "?tags=love&lt=2": {
                    "value": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62d68431c66b1193baf90df7",
                            "title": "test post 1",
                            "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                            "author": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "media": [
                              {
                                "mediaRef": "62d68430c66b1193baf90df2",
                                "mediaUrl": "http://localhost:1020/post/62d68430c66b1193baf90df2/media",
                                "_id": "62d68431c66b1193baf90df8"
                              },
                              {
                                "mediaRef": "62d68430c66b1193baf90df3",
                                "mediaUrl": "http://localhost:1020/post/62d68430c66b1193baf90df3/media",
                                "_id": "62d68431c66b1193baf90df9"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["love", "wisdom"],
                            "createdAt": "2022-07-19T10:15:13.082Z",
                            "updatedAt": "2022-07-19T10:15:13.082Z",
                            "__v": 0
                          },
                          {
                            "_id": "62d68493c66b1193baf90e00",
                            "title": "test post 2",
                            "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                            "author": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "media": [
                              {
                                "mediaRef": "62d68493c66b1193baf90dfb",
                                "mediaUrl": "http://localhost:1020/post/62d68493c66b1193baf90dfb/media",
                                "_id": "62d68493c66b1193baf90e01"
                              },
                              {
                                "mediaRef": "62d68493c66b1193baf90dfc",
                                "mediaUrl": "http://localhost:1020/post/62d68493c66b1193baf90dfc/media",
                                "_id": "62d68493c66b1193baf90e02"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["love", "wisdom"],
                            "createdAt": "2022-07-19T10:16:51.951Z",
                            "updatedAt": "2022-07-19T11:38:50.115Z",
                            "__v": 0
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 4
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "bad query -> ?random=1&anotherone=lksfjls": {
                    "value": {
                      "success": false,
                      "message": "Invalid query parameters: random,anotherone"
                    }
                  },
                  "invalid query  value -> srt=random": {
                    "value": {
                      "success": false,
                      "message": "Invalid value for srt query parameter:: mp"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-post",
        "description": "with this end point you can get customized post list with some specific queries...",
        "security": [
          {
            "apikey": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Request per page / no of result you want in a single query. Default value 5"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "The no of page you want to request"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyword",
            "description": "the word to search for in title and description of post"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "srt",
            "description": "for most recent -> mr, for most liked -> ml. "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tags",
            "description": "you can put a single tag and get all the posts that includes the tag, note again the parameter is tags not tag."
          }
        ]
      }
    },
    "/post/{postId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "postId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a specific post by their id",
        "tags": ["post"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "author": {
                          "type": "string"
                        },
                        "authorname": {
                          "type": "string"
                        },
                        "media": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "likes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "likecount": {
                          "type": "integer"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "post": {
                        "_id": "62d684ccc66b1193baf90fe6",
                        "title": "updated post 5",
                        "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "media": [],
                        "likes": [],
                        "likecount": 0,
                        "tags": ["walhalla"],
                        "createdAt": "2022-07-19T10:17:48.451Z",
                        "updatedAt": "2022-07-19T10:19:06.045Z",
                        "__v": 0
                      }
                    }
                  }
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "post": {
                        "_id": "62d684ccc66b1193baf90fe6",
                        "title": "updated post 5",
                        "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "media": [],
                        "likes": [],
                        "likecount": 0,
                        "tags": ["walhalla"],
                        "createdAt": "2022-07-19T10:17:48.451Z",
                        "updatedAt": "2022-07-19T10:19:06.045Z",
                        "__v": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Post not found"
                    }
                  }
                },
                "examples": {
                  "Not found": {
                    "value": {
                      "success": false,
                      "message": "Post not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-post-postId",
        "description": "This end point  provides a single requested post",
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "put": {
        "summary": "Update post",
        "operationId": "put-post-postId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "updated": {
                    "value": {
                      "success": true,
                      "post": {
                        "title": "The brown fox story 2",
                        "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "media": [
                          {
                            "mediaRef": "62de6ed00383fbabf1723420",
                            "mediaUrl": "http://localhost:1020/post/62de6ed00383fbabf1723420/media",
                            "_id": "62de6ed80383fbabf17234bf"
                          },
                          {
                            "mediaRef": "62de6ed70383fbabf17234ba",
                            "mediaUrl": "http://localhost:1020/post/62de6ed70383fbabf17234ba/media",
                            "_id": "62de6ed80383fbabf17234c0"
                          }
                        ],
                        "likes": [],
                        "likecount": 0,
                        "tags": ["greed", ""],
                        "_id": "62de6ed80383fbabf17234be",
                        "createdAt": "2022-07-25T10:22:16.339Z",
                        "updatedAt": "2022-07-25T10:22:16.339Z",
                        "__v": 0
                      },
                      "message": "Post Updated successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "wrong user tries to update post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Can not perform this task, Forbidden"
                    }
                  }
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "success": false,
                      "message": "Can not perform this task, Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "make request with updated title,description,tags and media..",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {
                "with new title": {
                  "value": {
                    "title": "The brown fox story 2",
                    "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don't be fooled by false praise",
                    "tags": ["greed", "cunning"],
                    "media": ["brownfox.jpg", "brownfox.mp4"]
                  }
                }
              }
            }
          },
          "description": "The body should contain updated feilds and for the non updated fields the old value."
        },
        "tags": ["post"]
      },
      "delete": {
        "summary": "Delete post",
        "operationId": "delete-post-postId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "author": {
                          "type": "string"
                        },
                        "authorname": {
                          "type": "string"
                        },
                        "media": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "mediaRef": {
                                "type": "string"
                              },
                              "mediaUrl": {
                                "type": "string"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "likes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "likecount": {
                          "type": "integer"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "post": {
                        "_id": "62de6ed80383fbabf17234be",
                        "title": "The brown fox story 2",
                        "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "media": [
                          {
                            "mediaRef": "62de7065a358a5d18f5befe4",
                            "mediaUrl": "http://localhost:1020/post/62de7065a358a5d18f5befe4/media",
                            "_id": "62de7067a358a5d18f5befed"
                          }
                        ],
                        "likes": [],
                        "likecount": 0,
                        "tags": ["walhalla"],
                        "createdAt": "2022-07-25T10:22:16.339Z",
                        "updatedAt": "2022-07-25T10:28:54.986Z",
                        "__v": 0
                      },
                      "message": "Post deleted successfully"
                    }
                  }
                },
                "examples": {
                  "post delete success": {
                    "value": {
                      "success": true,
                      "post": {
                        "_id": "62de6ed80383fbabf17234be",
                        "title": "The brown fox story 2",
                        "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "media": [
                          {
                            "mediaRef": "62de7065a358a5d18f5befe4",
                            "mediaUrl": "http://localhost:1020/post/62de7065a358a5d18f5befe4/media",
                            "_id": "62de7067a358a5d18f5befed"
                          }
                        ],
                        "likes": [],
                        "likecount": 0,
                        "tags": ["walhalla"],
                        "createdAt": "2022-07-25T10:22:16.339Z",
                        "updatedAt": "2022-07-25T10:28:54.986Z",
                        "__v": 0
                      },
                      "message": "Post deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Post not found"
                    }
                  }
                },
                "examples": {
                  "not found": {
                    "value": {
                      "success": false,
                      "message": "Post not found"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete post and all its comments",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "tags": ["post"]
      }
    },
    "/post/new": {
      "post": {
        "summary": "Create post",
        "operationId": "post-post-new",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "author": {
                          "type": "string"
                        },
                        "authorname": {
                          "type": "string"
                        },
                        "media": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "mediaRef": {
                                "type": "string"
                              },
                              "mediaUrl": {
                                "type": "string"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "likes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "likecount": {
                          "type": "integer"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "_id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "post": {
                        "title": "The brown fox story",
                        "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "media": [
                          {
                            "mediaRef": "62de52fb40327b2c63fb15ac",
                            "mediaUrl": "http://localhost:1020/post/62de52fb40327b2c63fb15ac/media",
                            "_id": "62de530340327b2c63fb164b"
                          },
                          {
                            "mediaRef": "62de530240327b2c63fb1646",
                            "mediaUrl": "http://localhost:1020/post/62de530240327b2c63fb1646/media",
                            "_id": "62de530340327b2c63fb164c"
                          }
                        ],
                        "likes": [],
                        "likecount": 0,
                        "tags": ["greed", "cunning"],
                        "_id": "62de530340327b2c63fb164a",
                        "createdAt": "2022-07-25T08:23:31.507Z",
                        "updatedAt": "2022-07-25T08:23:31.507Z",
                        "__v": 0
                      },
                      "message": "Post created successfully"
                    }
                  }
                },
                "examples": {
                  "post created": {
                    "value": {
                      "success": true,
                      "post": {
                        "title": "The brown fox story",
                        "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don''t be fooled by false praise",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "media": [
                          {
                            "mediaRef": "62de52fb40327b2c63fb15ac",
                            "mediaUrl": "http://localhost:1020/post/62de52fb40327b2c63fb15ac/media",
                            "_id": "62de530340327b2c63fb164b"
                          },
                          {
                            "mediaRef": "62de530240327b2c63fb1646",
                            "mediaUrl": "http://localhost:1020/post/62de530240327b2c63fb1646/media",
                            "_id": "62de530340327b2c63fb164c"
                          }
                        ],
                        "likes": [],
                        "likecount": 0,
                        "tags": ["greed", "cunning"],
                        "_id": "62de530340327b2c63fb164a",
                        "createdAt": "2022-07-25T08:23:31.507Z",
                        "updatedAt": "2022-07-25T08:23:31.507Z",
                        "__v": 0
                      },
                      "message": "Post created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "title cannot be empty"
                    }
                  }
                },
                "examples": {
                  "validation error": {
                    "value": {
                      "success": false,
                      "message": "title cannot be empty"
                    }
                  },
                  "invalid token": {
                    "value": {
                      "success": false,
                      "message": "title cannot be empty"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This end point creates a new post for a user.",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 35
                  },
                  "description": {
                    "type": "string",
                    "minLength": 150,
                    "maxLength": 1000
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "media": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "required": ["title", "description"]
              },
              "examples": {
                "The brown fox": {
                  "value": {
                    "title": "The brown fox story",
                    "description": "Once a fix was feeling very hungry . She wandered around in search of food. Finally having exhausted herself , she sat under a tree. She noticed a crow sitting on the tree. He had a small piece of meat in its beak. The Fox wanted to have the piece for herself at all costs . She thought of a good plan. Changing her tone she said Dear crow , your voice is so swee I would be so lucky if I get to hear a song in your sweet voice . The crow was delighted because of the unexpected praise he got. The moment he started singing , the piece fell from his mouth. The Fox ate it at once.Moral is Think before you act Don't be fooled by false praise",
                    "tags": ["greed", "cunning"],
                    "media": ["brownfox.jpg", "brownfox.mp4"]
                  }
                }
              }
            }
          },
          "description": "Title must be 5 characters long and below 35 characters.Description must be 150-1000 characters long.tags will be an array of strings. Media can be an array of files with key \"media\". Accepted file types are -  png|jpg|jpeg|JPEG|webp|gif|mp4|3gp|mkv|flv|mpg|avi|wav"
        },
        "tags": ["post"]
      }
    },
    "/post/{mediaRef}/media": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "mediaRef",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Stream post media.",
        "tags": ["post"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "no file found": {
                    "value": {
                      "success": false,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-post-mediaRef-media",
        "description": "Hit this endpoint to stream files from post media referances. In case you want to stream from the media link just include the link in your player with the content type from response header."
      }
    },
    "/user/{userId}/posts": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get user specific posts by userId",
        "tags": ["user", "post"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "Results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "author": {
                                "type": "string"
                              },
                              "authorname": {
                                "type": "string"
                              },
                              "media": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "mediaRef": {
                                      "type": "string"
                                    },
                                    "mediaUrl": {
                                      "type": "string"
                                    },
                                    "_id": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "likes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {}
                                }
                              },
                              "likecount": {
                                "type": "integer"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "__v": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "totalResult": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62d68431c66b1193baf90df7",
                            "title": "test post 1",
                            "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                            "author": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "media": [
                              {
                                "mediaRef": "62d68430c66b1193baf90df2",
                                "mediaUrl": "http://localhost:1020/post/62d68430c66b1193baf90df2/media",
                                "_id": "62d68431c66b1193baf90df8"
                              },
                              {
                                "mediaRef": "62d68430c66b1193baf90df3",
                                "mediaUrl": "http://localhost:1020/post/62d68430c66b1193baf90df3/media",
                                "_id": "62d68431c66b1193baf90df9"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["love", "wisdom"],
                            "createdAt": "2022-07-19T10:15:13.082Z",
                            "updatedAt": "2022-07-19T10:15:13.082Z",
                            "__v": 0
                          },
                          {
                            "_id": "62d68493c66b1193baf90e00",
                            "title": "test post 2",
                            "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                            "author": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "media": [
                              {
                                "mediaRef": "62d68493c66b1193baf90dfb",
                                "mediaUrl": "http://localhost:1020/post/62d68493c66b1193baf90dfb/media",
                                "_id": "62d68493c66b1193baf90e01"
                              },
                              {
                                "mediaRef": "62d68493c66b1193baf90dfc",
                                "mediaUrl": "http://localhost:1020/post/62d68493c66b1193baf90dfc/media",
                                "_id": "62d68493c66b1193baf90e02"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["love", "wisdom"],
                            "createdAt": "2022-07-19T10:16:51.951Z",
                            "updatedAt": "2022-07-19T11:38:50.115Z",
                            "__v": 0
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 7
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "success": {
                    "value": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62d68431c66b1193baf90df7",
                            "title": "test post 1",
                            "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                            "author": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "media": [
                              {
                                "mediaRef": "62d68430c66b1193baf90df2",
                                "mediaUrl": "http://localhost:1020/post/62d68430c66b1193baf90df2/media",
                                "_id": "62d68431c66b1193baf90df8"
                              },
                              {
                                "mediaRef": "62d68430c66b1193baf90df3",
                                "mediaUrl": "http://localhost:1020/post/62d68430c66b1193baf90df3/media",
                                "_id": "62d68431c66b1193baf90df9"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["love", "wisdom"],
                            "createdAt": "2022-07-19T10:15:13.082Z",
                            "updatedAt": "2022-07-19T10:15:13.082Z",
                            "__v": 0
                          },
                          {
                            "_id": "62d68493c66b1193baf90e00",
                            "title": "test post 2",
                            "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                            "author": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "media": [
                              {
                                "mediaRef": "62d68493c66b1193baf90dfb",
                                "mediaUrl": "http://localhost:1020/post/62d68493c66b1193baf90dfb/media",
                                "_id": "62d68493c66b1193baf90e01"
                              },
                              {
                                "mediaRef": "62d68493c66b1193baf90dfc",
                                "mediaUrl": "http://localhost:1020/post/62d68493c66b1193baf90dfc/media",
                                "_id": "62d68493c66b1193baf90e02"
                              }
                            ],
                            "likes": [],
                            "likecount": 0,
                            "tags": ["love", "wisdom"],
                            "createdAt": "2022-07-19T10:16:51.951Z",
                            "updatedAt": "2022-07-19T11:38:50.115Z",
                            "__v": 0
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 7
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "User not found"
                    }
                  }
                },
                "examples": {
                  "user not found": {
                    "value": {
                      "success": false,
                      "message": "User not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-user-userId-posts",
        "description": "This end point will provide all posts of a single user with customized result. ",
        "security": [
          {
            "apikey": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lt",
            "description": "Request per page / no of result you want in a single query. Default value 5"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "The no of page you want to request"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyword",
            "description": "the word to search for in title and description of post"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "srt",
            "description": "for most recent -> mr, for most liked -> ml. "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tags",
            "description": "you can put a single tag and get all the posts that includes the tag, note again the parameter is tags not tag."
          }
        ]
      }
    },
    "/post/{postId}/reaction": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "postId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Add reaction to the post",
        "operationId": "post-post-postId-reaction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sucess": {
                      "type": "boolean"
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "author": {
                          "type": "string"
                        },
                        "authorname": {
                          "type": "string"
                        },
                        "media": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "likes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "reactionType": {
                                "type": "string"
                              },
                              "authorId": {
                                "type": "string"
                              },
                              "authorname": {
                                "type": "string"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "likecount": {
                          "type": "integer"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "sucess": true,
                      "post": {
                        "_id": "62d94ef984e7c184d0a0cfc1",
                        "title": "jfddgdfg",
                        "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "media": [],
                        "likes": [
                          {
                            "reactionType": "lol",
                            "authorId": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "_id": "62de7a94f4966aa4afce2dc5"
                          }
                        ],
                        "likecount": 1,
                        "tags": ["love", "wisdom"],
                        "createdAt": "2022-07-21T13:04:57.627Z",
                        "updatedAt": "2022-07-25T11:12:20.901Z",
                        "__v": 0
                      },
                      "message": "lol added "
                    }
                  }
                },
                "examples": {
                  "reaction added": {
                    "value": {
                      "sucess": true,
                      "post": {
                        "_id": "62d94ef984e7c184d0a0cfc1",
                        "title": "jfddgdfg",
                        "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "media": [],
                        "likes": [
                          {
                            "reactionType": "lol",
                            "authorId": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "_id": "62de7a94f4966aa4afce2dc5"
                          }
                        ],
                        "likecount": 1,
                        "tags": ["love", "wisdom"],
                        "createdAt": "2022-07-21T13:04:57.627Z",
                        "updatedAt": "2022-07-25T11:12:20.901Z",
                        "__v": 0
                      },
                      "message": "lol added "
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Reaction already exists"
                    }
                  }
                },
                "examples": {
                  "already reacted": {
                    "value": {
                      "success": false,
                      "message": "Reaction already exists"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["post"],
        "description": "add a reaction to the post",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "reactionType": "care"
                  }
                },
                "properties": {
                  "reactionType": {
                    "type": "string",
                    "enum": ["love", "haha", "care", "lol", "like"]
                  }
                }
              },
              "examples": {
                "add reaction": {
                  "value": {
                    "reactionType": "lol"
                  }
                }
              }
            }
          },
          "description": "valid reaction types are like,love,haha,care,lol. Default reaction love."
        }
      },
      "delete": {
        "summary": "Remove reaction",
        "operationId": "delete-post-postId-reaction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "reaction removed": {
                    "value": {
                      "success": true,
                      "post": {
                        "_id": "62d68493c66b1193baf90e00",
                        "title": "test post 2",
                        "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "media": [
                          {
                            "mediaRef": "62d68493c66b1193baf90dfb",
                            "mediaUrl": "http://localhost:1020/post/62d68493c66b1193baf90dfb/media",
                            "_id": "62d68493c66b1193baf90e01"
                          },
                          {
                            "mediaRef": "62d68493c66b1193baf90dfc",
                            "mediaUrl": "http://localhost:1020/post/62d68493c66b1193baf90dfc/media",
                            "_id": "62d68493c66b1193baf90e02"
                          }
                        ],
                        "likes": [],
                        "likecount": 0,
                        "tags": ["love", "wisdom"],
                        "createdAt": "2022-07-19T10:16:51.951Z",
                        "updatedAt": "2022-07-25T11:21:56.567Z",
                        "__v": 0
                      },
                      "message": "reaction removed"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "remove reaction",
        "tags": ["post"],
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "summary": "Update reaction to a post.",
        "operationId": "patch-post-postId-reaction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sucess": {
                      "type": "boolean"
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "author": {
                          "type": "string"
                        },
                        "authorname": {
                          "type": "string"
                        },
                        "media": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "likes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "reactionType": {
                                "type": "string"
                              },
                              "authorId": {
                                "type": "string"
                              },
                              "authorname": {
                                "type": "string"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "likecount": {
                          "type": "integer"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "sucess": true,
                      "post": {
                        "_id": "62d94ef984e7c184d0a0cfc1",
                        "title": "jfddgdfg",
                        "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "media": [],
                        "likes": [
                          {
                            "reactionType": "care",
                            "authorId": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "_id": "62de7a94f4966aa4afce2dc5"
                          }
                        ],
                        "likecount": 1,
                        "tags": ["love", "wisdom"],
                        "createdAt": "2022-07-21T13:04:57.627Z",
                        "updatedAt": "2022-07-25T11:19:07.292Z",
                        "__v": 0
                      },
                      "message": "care added "
                    }
                  }
                },
                "examples": {
                  "reaction updated": {
                    "value": {
                      "sucess": true,
                      "post": {
                        "_id": "62d94ef984e7c184d0a0cfc1",
                        "title": "jfddgdfg",
                        "description": "skdjfhsdhfkjsdhfksdhfsdhfiusdhfiusdhfihsdifuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "media": [],
                        "likes": [
                          {
                            "reactionType": "care",
                            "authorId": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "_id": "62de7a94f4966aa4afce2dc5"
                          }
                        ],
                        "likecount": 1,
                        "tags": ["love", "wisdom"],
                        "createdAt": "2022-07-21T13:04:57.627Z",
                        "updatedAt": "2022-07-25T11:19:07.292Z",
                        "__v": 0
                      },
                      "message": "care added "
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["post"],
        "description": "update a reaction to the post",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {
                "update reaction": {
                  "value": {
                    "reactionType": "care"
                  }
                }
              }
            }
          },
          "description": "valid reaction types are like,love,haha,care,lol. Default reaction love."
        }
      }
    },
    "/post/{postId}/comment/all": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "postId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get all comments on a specific post with pagination and sorting...",
        "tags": ["comment"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "query 1-> ?lt=2&page=1&srt=ml": {
                    "value": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62d6871cd6e0d463861dded0",
                            "text": "updated comment 1",
                            "author": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "postId": "62d684ccc66b1193baf90fe6",
                            "likes": [
                              {
                                "reactionType": "haha",
                                "authorId": "62d683d17bc23f17bccb3162",
                                "authorname": "aritra op",
                                "_id": "62d6889ed6e0d463861ddef9"
                              },
                              {
                                "reactionType": "haha",
                                "authorId": "62d64cd769cd6ed3b21da086",
                                "authorname": "aritra",
                                "_id": "62d688bdd6e0d463861ddf00"
                              },
                              {
                                "reactionType": "care",
                                "authorId": "62d64e7fca666d9ee74a10c5",
                                "authorname": "demo3",
                                "_id": "62d68910d6e0d463861ddf09"
                              }
                            ],
                            "likecount": 3,
                            "parentId": null,
                            "createdAt": "2022-07-19T10:27:40.320Z",
                            "updatedAt": "2022-07-19T10:37:15.050Z",
                            "__v": 0,
                            "replies": [
                              {
                                "_id": "62d6880ad6e0d463861ddee1",
                                "text": "reply 1",
                                "author": "62d683d17bc23f17bccb3162",
                                "authorname": "aritra op",
                                "postId": "62d684ccc66b1193baf90fe6",
                                "likes": [],
                                "likecount": 0,
                                "parentId": "62d6871cd6e0d463861dded0",
                                "createdAt": "2022-07-19T10:31:38.031Z",
                                "updatedAt": "2022-07-19T10:31:38.031Z",
                                "__v": 0
                              },
                              {
                                "_id": "62d68810d6e0d463861ddee6",
                                "text": "reply 2",
                                "author": "62d683d17bc23f17bccb3162",
                                "authorname": "aritra op",
                                "postId": "62d684ccc66b1193baf90fe6",
                                "likes": [],
                                "likecount": 0,
                                "parentId": "62d6871cd6e0d463861dded0",
                                "createdAt": "2022-07-19T10:31:44.015Z",
                                "updatedAt": "2022-07-19T10:31:44.015Z",
                                "__v": 0
                              },
                              {
                                "_id": "62d68814d6e0d463861ddeeb",
                                "text": "reply 3",
                                "author": "62d683d17bc23f17bccb3162",
                                "authorname": "aritra op",
                                "postId": "62d684ccc66b1193baf90fe6",
                                "likes": [],
                                "likecount": 0,
                                "parentId": "62d6871cd6e0d463861dded0",
                                "createdAt": "2022-07-19T10:31:48.438Z",
                                "updatedAt": "2022-07-19T10:31:48.438Z",
                                "__v": 0
                              },
                              {
                                "_id": "62d68819d6e0d463861ddef0",
                                "text": "reply 4",
                                "author": "62d683d17bc23f17bccb3162",
                                "authorname": "aritra op",
                                "postId": "62d684ccc66b1193baf90fe6",
                                "likes": [],
                                "likecount": 0,
                                "parentId": "62d6871cd6e0d463861dded0",
                                "createdAt": "2022-07-19T10:31:53.172Z",
                                "updatedAt": "2022-07-19T10:31:53.172Z",
                                "__v": 0
                              }
                            ]
                          },
                          {
                            "_id": "62d6870ed6e0d463861ddec4",
                            "text": "comment 2",
                            "author": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "postId": "62d684ccc66b1193baf90fe6",
                            "likes": [],
                            "likecount": 0,
                            "parentId": null,
                            "createdAt": "2022-07-19T10:27:26.803Z",
                            "updatedAt": "2022-07-19T10:27:26.803Z",
                            "__v": 0,
                            "replies": []
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 5
                          }
                        ]
                      }
                    }
                  },
                  "query 2-> ?srt=mr&lt=1": {
                    "value": {
                      "success": true,
                      "data": {
                        "Results": [
                          {
                            "_id": "62df6d659e0a576e2404f5dc",
                            "text": "some comment",
                            "author": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "postId": "62d684ccc66b1193baf90fe6",
                            "likes": [],
                            "likecount": 0,
                            "parentId": null,
                            "createdAt": "2022-07-26T04:28:21.607Z",
                            "updatedAt": "2022-07-26T04:28:21.607Z",
                            "__v": 0,
                            "replies": [
                              {
                                "_id": "62df6e339e0a576e2404f5e3",
                                "text": "updated comment",
                                "author": "62de52f140327b2c63fb15a9",
                                "authorname": "rando",
                                "postId": "62d684ccc66b1193baf90fe6",
                                "likes": [],
                                "likecount": 0,
                                "parentId": "62df6d659e0a576e2404f5dc",
                                "createdAt": "2022-07-26T04:31:47.645Z",
                                "updatedAt": "2022-07-26T04:57:49.835Z",
                                "__v": 0
                              }
                            ]
                          }
                        ],
                        "totalResult": [
                          {
                            "count": 5
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "post not found": {
                    "value": {
                      "success": false,
                      "message": "Post not found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-post-postId-comment-all",
        "description": "Hit this endpoint to get all comments on a specific post with pagination and sorting. we achive the sorting and pagination behaviour by query parameters as described below.",
        "security": [
          {
            "apikey": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lt",
            "description": "the value will be the request per page/ no of comment you want to get in a single request. The value defaults to 5"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page",
            "description": "the page no you want to request for. the value defaults to 1"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "srt",
            "description": "you can sort the comments by most liked ones in that case the value will be -> ml or by most recent ones in that case value will be -> mr"
          }
        ]
      }
    },
    "/post/{postId}/comment/new": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "postId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Add Comment to a Post.",
        "operationId": "post-post-postId-new",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "comment": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "author": {
                          "type": "string"
                        },
                        "authorname": {
                          "type": "string"
                        },
                        "postId": {
                          "type": "string"
                        },
                        "likes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "likecount": {
                          "type": "integer"
                        },
                        "parentId": {
                          "type": "null"
                        },
                        "_id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "__v": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "comment": {
                        "text": "some comment",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "postId": "62d684ccc66b1193baf90fe6",
                        "likes": [],
                        "likecount": 0,
                        "parentId": null,
                        "_id": "62df6d659e0a576e2404f5dc",
                        "createdAt": "2022-07-26T04:28:21.607Z",
                        "updatedAt": "2022-07-26T04:28:21.607Z",
                        "__v": 0
                      },
                      "message": "Comment created successfully"
                    }
                  }
                },
                "examples": {
                  "comment created": {
                    "value": {
                      "success": true,
                      "comment": {
                        "text": "some comment",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "postId": "62d684ccc66b1193baf90fe6",
                        "likes": [],
                        "likecount": 0,
                        "parentId": null,
                        "_id": "62df6d659e0a576e2404f5dc",
                        "createdAt": "2022-07-26T04:28:21.607Z",
                        "updatedAt": "2022-07-26T04:28:21.607Z",
                        "__v": 0
                      },
                      "message": "Comment created successfully"
                    }
                  },
                  "reply created": {
                    "value": {
                      "success": true,
                      "comment": {
                        "text": "some reply",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "postId": "62d684ccc66b1193baf90fe6",
                        "likes": [],
                        "likecount": 0,
                        "parentId": "62df6d659e0a576e2404f5dc",
                        "_id": "62df6e339e0a576e2404f5e3",
                        "createdAt": "2022-07-26T04:31:47.645Z",
                        "updatedAt": "2022-07-26T04:31:47.645Z",
                        "__v": 0
                      },
                      "message": "Comment created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Invalid token"
                    }
                  }
                },
                "examples": {
                  "Invalid Token - unauthenticated user ": {
                    "value": {
                      "success": false,
                      "message": "Invalid token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Invalid parent comment"
                    }
                  }
                },
                "examples": {
                  "Invalid parent Id": {
                    "value": {
                      "success": false,
                      "message": "Invalid parent comment"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Hit this end point to add a new comment to a specific post.The post id is to be provided and should be valid. The user must be logged in to add a comment, although backend will take care of that.Note : any logged in user can add comment.",
        "tags": ["comment"],
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {
                "add comment #level 1": {
                  "value": {
                    "text": "some comment"
                  }
                },
                "add reply #level 2": {
                  "value": {
                    "text": "some reply",
                    "parentId": "62df6d659e0a576e2404f5dc"
                  }
                }
              }
            }
          },
          "description": "To add a comment the text field should contain the comment and in case of reply the parentId field should contain the _id of the comment to reply to. Note : only two level of nesting is available so far, so make sure you dont add replies to replies."
        }
      }
    },
    "/post/{postId}/comment/{commentId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "postId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "commentId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Edit a comment.",
        "operationId": "post-post-postId-comment-commentId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "comment updated": {
                    "value": {
                      "success": true,
                      "comment": {
                        "_id": "62df6e339e0a576e2404f5e3",
                        "text": "updated comment",
                        "author": "62de52f140327b2c63fb15a9",
                        "authorname": "rando",
                        "postId": "62d684ccc66b1193baf90fe6",
                        "likes": [],
                        "likecount": 0,
                        "parentId": "62df6d659e0a576e2404f5dc",
                        "createdAt": "2022-07-26T04:31:47.645Z",
                        "updatedAt": "2022-07-26T04:57:49.835Z",
                        "__v": 0
                      },
                      "message": "Comment updated successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "editing  others comment": {
                    "value": {
                      "success": false,
                      "message": "Can not perform this task, Forbidden"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": false,
                      "message": "Post not found"
                    }
                  }
                },
                "examples": {
                  "post not found": {
                    "value": {
                      "success": false,
                      "message": "Post not found"
                    }
                  },
                  "comment not found": {
                    "value": {
                      "success": false,
                      "message": "Comment not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["comment"],
        "description": "Hit this end point to edit a comment.The post id and the comment id are to be provided and should be valid. The user must be logged in to eidt a comment, although backend will take care of that.Note : only the author of a comment can edit his own comments not any comment.",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "text": "updated comment "
                  }
                },
                "properties": {
                  "text": {
                    "type": "string"
                  }
                },
                "required": ["text"]
              },
              "examples": {
                "update comment": {
                  "value": {
                    "text": "updated comment "
                  }
                }
              }
            }
          },
          "description": "To edit a comment the text field should contain the new comment."
        }
      },
      "delete": {
        "summary": "Delete a comment",
        "operationId": "delete-post-postId-comment-commentId",
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": ["comment"],
        "description": "Hit this end point to delete a comment.The post id and the comment id are to be provided and should be valid. The user must be logged in to delete a comment, although backend will take care of that.Note : only the author of a comment and the author of the post can delete the comment.",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "summary": "Get a specific comment with all its replies...",
        "operationId": "get-post-postId-comment-commentId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "comment": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          },
                          "author": {
                            "type": "string"
                          },
                          "authorname": {
                            "type": "string"
                          },
                          "postId": {
                            "type": "string"
                          },
                          "likes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "reactionType": {
                                  "type": "string"
                                },
                                "authorId": {
                                  "type": "string"
                                },
                                "authorname": {
                                  "type": "string"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "likecount": {
                            "type": "integer"
                          },
                          "parentId": {
                            "type": "null"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "__v": {
                            "type": "integer"
                          },
                          "replies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string"
                                },
                                "text": {
                                  "type": "string"
                                },
                                "author": {
                                  "type": "string"
                                },
                                "authorname": {
                                  "type": "string"
                                },
                                "postId": {
                                  "type": "string"
                                },
                                "likes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                },
                                "likecount": {
                                  "type": "integer"
                                },
                                "parentId": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "__v": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "success": true,
                      "comment": [
                        {
                          "_id": "62d6871cd6e0d463861dded0",
                          "text": "updated comment 1",
                          "author": "62d683d17bc23f17bccb3162",
                          "authorname": "aritra op",
                          "postId": "62d684ccc66b1193baf90fe6",
                          "likes": [
                            {
                              "reactionType": "haha",
                              "authorId": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "_id": "62d6889ed6e0d463861ddef9"
                            },
                            {
                              "reactionType": "haha",
                              "authorId": "62d64cd769cd6ed3b21da086",
                              "authorname": "aritra",
                              "_id": "62d688bdd6e0d463861ddf00"
                            },
                            {
                              "reactionType": "care",
                              "authorId": "62d64e7fca666d9ee74a10c5",
                              "authorname": "demo3",
                              "_id": "62d68910d6e0d463861ddf09"
                            }
                          ],
                          "likecount": 3,
                          "parentId": null,
                          "createdAt": "2022-07-19T10:27:40.320Z",
                          "updatedAt": "2022-07-19T10:37:15.050Z",
                          "__v": 0,
                          "replies": [
                            {
                              "_id": "62d6880ad6e0d463861ddee1",
                              "text": "reply 1",
                              "author": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "postId": "62d684ccc66b1193baf90fe6",
                              "likes": [],
                              "likecount": 0,
                              "parentId": "62d6871cd6e0d463861dded0",
                              "createdAt": "2022-07-19T10:31:38.031Z",
                              "updatedAt": "2022-07-19T10:31:38.031Z",
                              "__v": 0
                            },
                            {
                              "_id": "62d68810d6e0d463861ddee6",
                              "text": "reply 2",
                              "author": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "postId": "62d684ccc66b1193baf90fe6",
                              "likes": [],
                              "likecount": 0,
                              "parentId": "62d6871cd6e0d463861dded0",
                              "createdAt": "2022-07-19T10:31:44.015Z",
                              "updatedAt": "2022-07-19T10:31:44.015Z",
                              "__v": 0
                            },
                            {
                              "_id": "62d68814d6e0d463861ddeeb",
                              "text": "reply 3",
                              "author": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "postId": "62d684ccc66b1193baf90fe6",
                              "likes": [],
                              "likecount": 0,
                              "parentId": "62d6871cd6e0d463861dded0",
                              "createdAt": "2022-07-19T10:31:48.438Z",
                              "updatedAt": "2022-07-19T10:31:48.438Z",
                              "__v": 0
                            },
                            {
                              "_id": "62d68819d6e0d463861ddef0",
                              "text": "reply 4",
                              "author": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "postId": "62d684ccc66b1193baf90fe6",
                              "likes": [],
                              "likecount": 0,
                              "parentId": "62d6871cd6e0d463861dded0",
                              "createdAt": "2022-07-19T10:31:53.172Z",
                              "updatedAt": "2022-07-19T10:31:53.172Z",
                              "__v": 0
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "get comment": {
                    "value": {
                      "success": true,
                      "comment": [
                        {
                          "_id": "62d6871cd6e0d463861dded0",
                          "text": "updated comment 1",
                          "author": "62d683d17bc23f17bccb3162",
                          "authorname": "aritra op",
                          "postId": "62d684ccc66b1193baf90fe6",
                          "likes": [
                            {
                              "reactionType": "haha",
                              "authorId": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "_id": "62d6889ed6e0d463861ddef9"
                            },
                            {
                              "reactionType": "haha",
                              "authorId": "62d64cd769cd6ed3b21da086",
                              "authorname": "aritra",
                              "_id": "62d688bdd6e0d463861ddf00"
                            },
                            {
                              "reactionType": "care",
                              "authorId": "62d64e7fca666d9ee74a10c5",
                              "authorname": "demo3",
                              "_id": "62d68910d6e0d463861ddf09"
                            }
                          ],
                          "likecount": 3,
                          "parentId": null,
                          "createdAt": "2022-07-19T10:27:40.320Z",
                          "updatedAt": "2022-07-19T10:37:15.050Z",
                          "__v": 0,
                          "replies": [
                            {
                              "_id": "62d6880ad6e0d463861ddee1",
                              "text": "reply 1",
                              "author": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "postId": "62d684ccc66b1193baf90fe6",
                              "likes": [],
                              "likecount": 0,
                              "parentId": "62d6871cd6e0d463861dded0",
                              "createdAt": "2022-07-19T10:31:38.031Z",
                              "updatedAt": "2022-07-19T10:31:38.031Z",
                              "__v": 0
                            },
                            {
                              "_id": "62d68810d6e0d463861ddee6",
                              "text": "reply 2",
                              "author": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "postId": "62d684ccc66b1193baf90fe6",
                              "likes": [],
                              "likecount": 0,
                              "parentId": "62d6871cd6e0d463861dded0",
                              "createdAt": "2022-07-19T10:31:44.015Z",
                              "updatedAt": "2022-07-19T10:31:44.015Z",
                              "__v": 0
                            },
                            {
                              "_id": "62d68814d6e0d463861ddeeb",
                              "text": "reply 3",
                              "author": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "postId": "62d684ccc66b1193baf90fe6",
                              "likes": [],
                              "likecount": 0,
                              "parentId": "62d6871cd6e0d463861dded0",
                              "createdAt": "2022-07-19T10:31:48.438Z",
                              "updatedAt": "2022-07-19T10:31:48.438Z",
                              "__v": 0
                            },
                            {
                              "_id": "62d68819d6e0d463861ddef0",
                              "text": "reply 4",
                              "author": "62d683d17bc23f17bccb3162",
                              "authorname": "aritra op",
                              "postId": "62d684ccc66b1193baf90fe6",
                              "likes": [],
                              "likecount": 0,
                              "parentId": "62d6871cd6e0d463861dded0",
                              "createdAt": "2022-07-19T10:31:53.172Z",
                              "updatedAt": "2022-07-19T10:31:53.172Z",
                              "__v": 0
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "post not found": {
                    "value": {
                      "success": false,
                      "message": "Post not found"
                    }
                  },
                  "comment not found": {
                    "value": {
                      "success": false,
                      "message": "Comment not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["comment"],
        "description": "Hit this end point to get a specific comment with all its replies.",
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/post/{postId}/comment/{commentId}/reaction": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "postId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "commentId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Add reaction to a comment.",
        "operationId": "post-post-postId-comment-commentId-reaction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "reaction added": {
                    "value": {
                      "sucess": true,
                      "comment": {
                        "_id": "62d6871cd6e0d463861dded0",
                        "text": "updated comment 1",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "postId": "62d684ccc66b1193baf90fe6",
                        "likes": [
                          {
                            "reactionType": "haha",
                            "authorId": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "_id": "62d6889ed6e0d463861ddef9"
                          },
                          {
                            "reactionType": "haha",
                            "authorId": "62d64cd769cd6ed3b21da086",
                            "authorname": "aritra",
                            "_id": "62d688bdd6e0d463861ddf00"
                          },
                          {
                            "reactionType": "care",
                            "authorId": "62d64e7fca666d9ee74a10c5",
                            "authorname": "demo3",
                            "_id": "62d68910d6e0d463861ddf09"
                          },
                          {
                            "reactionType": "haha",
                            "authorId": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "_id": "62df82c3ae9ea6dbc3af045c"
                          }
                        ],
                        "likecount": 4,
                        "parentId": null,
                        "createdAt": "2022-07-19T10:27:40.320Z",
                        "updatedAt": "2022-07-26T05:59:31.516Z",
                        "__v": 0
                      },
                      "message": "haha added "
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["comment"],
        "description": "Hit this endpoint to add a reaction to the comment.This end point works same as the add reaction feature of post section.",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {
                "add reaction": {
                  "value": {
                    "reactionType": "haha"
                  }
                }
              }
            }
          },
          "description": "valid reaction types are like,love,haha,care,lol. Default reaction love."
        }
      },
      "patch": {
        "summary": "update reaction to a comment.",
        "operationId": "patch-post-postId-comment-commentId-reaction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "reaction updated": {
                    "value": {
                      "sucess": true,
                      "comment": {
                        "_id": "62d6871cd6e0d463861dded0",
                        "text": "updated comment 1",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "postId": "62d684ccc66b1193baf90fe6",
                        "likes": [
                          {
                            "reactionType": "haha",
                            "authorId": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "_id": "62d6889ed6e0d463861ddef9"
                          },
                          {
                            "reactionType": "haha",
                            "authorId": "62d64cd769cd6ed3b21da086",
                            "authorname": "aritra",
                            "_id": "62d688bdd6e0d463861ddf00"
                          },
                          {
                            "reactionType": "care",
                            "authorId": "62d64e7fca666d9ee74a10c5",
                            "authorname": "demo3",
                            "_id": "62d68910d6e0d463861ddf09"
                          },
                          {
                            "reactionType": "care",
                            "authorId": "62de52f140327b2c63fb15a9",
                            "authorname": "rando",
                            "_id": "62df82c3ae9ea6dbc3af045c"
                          }
                        ],
                        "likecount": 4,
                        "parentId": null,
                        "createdAt": "2022-07-19T10:27:40.320Z",
                        "updatedAt": "2022-07-26T06:04:43.947Z",
                        "__v": 0
                      },
                      "message": "care added "
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["comment"],
        "description": "Hit this endpoint update a reaction to a comment. This endpoint works same as the update reaction feature on the post section.",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {
                "update reaction": {
                  "value": {
                    "reactionType": "care"
                  }
                }
              }
            }
          },
          "description": "valid reaction types are like,love,haha,care,lol. Default reaction love."
        }
      },
      "delete": {
        "summary": "Remove a reaction from a comment",
        "operationId": "delete-post-postId-comment-commentId-reaction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "reaction removed": {
                    "value": {
                      "success": true,
                      "comment": {
                        "_id": "62d6871cd6e0d463861dded0",
                        "text": "updated comment 1",
                        "author": "62d683d17bc23f17bccb3162",
                        "authorname": "aritra op",
                        "postId": "62d684ccc66b1193baf90fe6",
                        "likes": [
                          {
                            "reactionType": "haha",
                            "authorId": "62d683d17bc23f17bccb3162",
                            "authorname": "aritra op",
                            "_id": "62d6889ed6e0d463861ddef9"
                          },
                          {
                            "reactionType": "haha",
                            "authorId": "62d64cd769cd6ed3b21da086",
                            "authorname": "aritra",
                            "_id": "62d688bdd6e0d463861ddf00"
                          },
                          {
                            "reactionType": "care",
                            "authorId": "62d64e7fca666d9ee74a10c5",
                            "authorname": "demo3",
                            "_id": "62d68910d6e0d463861ddf09"
                          }
                        ],
                        "likecount": 3,
                        "parentId": null,
                        "createdAt": "2022-07-19T10:27:40.320Z",
                        "updatedAt": "2022-07-26T06:07:40.800Z",
                        "__v": 0
                      },
                      "message": "reaction removed"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["comment"],
        "description": "Hit this endpoint to remove a reaction from a comment. This endpoint works same as the remove reaction feature on the post section.",
        "security": [
          {
            "apikey": []
          },
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "in": "header",
        "name": "apikey"
      },
      "Authorization": {
        "type": "http",
        "scheme": "bearer",
        "description": "This is for user authentication. after login you will get a token and that will be Authorization header with  Bearer token value."
      }
    }
  },
  "x-extension-2": null,
  "x-extension-3": null,
  "security": [
    {
      "apikey": []
    },
    {
      "Authorization": []
    }
  ]
}
